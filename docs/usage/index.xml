<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testing and Deployment on Jiffy Services Generator</title>
    <link>https://1414c.github.io/jiffy/usage/</link>
    <description>Recent content in Testing and Deployment on Jiffy Services Generator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://1414c.github.io/jiffy/usage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Application Configuration Overview</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-a/</guid>
      <description>Overview The generated application code can be run unchanged for testing purposes, but some external setup is required.
 Edit the generated .prd.config.json file to define your production configuration. Edit the generated .dev.config.json file to define your development / testing configuration. When using SSL to test locally, SSL certs will be needed. See the SSL setup section below for instructions regarding the generation of certificates suitable for local testing via go test.</description>
    </item>
    
    <item>
      <title>Default Configuration</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-b/</guid>
      <description>Default Config The following command strings may be used to run the program using a set of default configuration that has been hard-coded into the source files. The default configuration may be edited in the generated appobj/appconf.go file to suit local requirements. The default application settings are shown in the server configuration file format. The default configuration publishes the end-points on port 3000 over http due to the absence of the ‘cert_file’ and ‘key_file’ values.</description>
    </item>
    
    <item>
      <title>Development Configuration</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-c/</guid>
      <description>Development Config The following command string may be used to run the program using the values defined in the ./.dev.config.json file.
$ go run main.go -dev  The generated sample dev configuration file should be edited to match the local environment. Jiffy will generate a sample .dev.config.json file similar to the one shown below:
{ &amp;quot;external_address&amp;quot;: &amp;quot;127.0.0.1:3000&amp;quot;, &amp;quot;internal_address&amp;quot;: &amp;quot;127.0.0.1:4444&amp;quot;, &amp;quot;env&amp;quot;: &amp;quot;dev&amp;quot;, &amp;quot;ping_cycle&amp;quot;: 1, &amp;quot;failure_threshold&amp;quot;: 5, &amp;quot;pepper&amp;quot;: &amp;quot;secret-pepper-key&amp;quot;, &amp;quot;hmac_Key&amp;quot;: &amp;quot;secret-hmac-key&amp;quot;, &amp;quot;database&amp;quot;: { &amp;quot;db_dialect&amp;quot;: &amp;quot;postgres&amp;quot;, &amp;quot;host&amp;quot;: &amp;quot;localhost&amp;quot;, &amp;quot;port&amp;quot;: 5432, &amp;quot;user&amp;quot;: &amp;quot;godev&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;gogogo123&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;glrestgen&amp;quot; }, &amp;quot;cert_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;rsa256_priv_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;rsa256_pub_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;rsa384_priv_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;rsa384_pub_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;rsa512_priv_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;rsa512_pub_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;ecdsa256_priv_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;ecdsa256_pub_key_file&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;ecdsa384_priv_key_file&amp;quot;: &amp;quot;jwtkeys/ecdsa384/ec384.</description>
    </item>
    
    <item>
      <title>Production Configuration</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-d/</guid>
      <description>Production Config The following command string may be used to run the program using the values defined in the ./.prd.config.json file.
$ go run main.go -prod  The generated sample dev configuration file should be edited to match the local environment. Jiffy will generate a sample .prod.config.json file similar to the one shown below:
{ &amp;quot;external_address&amp;quot;: &amp;quot;127.0.0.1:8080&amp;quot;, &amp;quot;internal_address&amp;quot;: &amp;quot;127.0.0.1:4444&amp;quot;, &amp;quot;env&amp;quot;: &amp;quot;prod&amp;quot;, &amp;quot;ping_cycle&amp;quot;: 1, &amp;quot;failure_threshold&amp;quot;: 5, &amp;quot;pepper&amp;quot;: &amp;quot;secret-pepper-key&amp;quot;, &amp;quot;hmac_Key&amp;quot;: &amp;quot;secret-hmac-key&amp;quot;, &amp;quot;database&amp;quot;: { &amp;quot;db_dialect&amp;quot;: &amp;quot;postgres&amp;quot;, &amp;quot;host&amp;quot;: &amp;quot;localhost&amp;quot;, &amp;quot;port&amp;quot;: 5432, &amp;quot;user&amp;quot;: &amp;quot;godev&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;gogogo123&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;glrestgen&amp;quot; }, &amp;quot;cert_file&amp;quot;: &amp;quot;srvcert.</description>
    </item>
    
    <item>
      <title>Application Server Flags</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-e/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-e/</guid>
      <description>Application Server Flags Flags are generally not used, as the configuration files (models.json) are easier to deal with. There are however, a few flags that can be used when starting the server:
 -dr  The -dr switch is used to perform a destructive reset of the application&amp;rsquo;s data tables. This flag causes the application tables to be dropped and recreated, but does not affect the user, user-group, or authorization tables.</description>
    </item>
    
    <item>
      <title>Testing with TLS</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-f/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-f/</guid>
      <description>Generate Self-Signed Certs for https Testing If you wish to perform local https-based testing, it is possible to do so through the use of self-signed certificates. Self-signed certificates can be easily created through the use of the openssl tool on *nix systems. 
Verify the OpenSSL Installation Open a terminal session and verify that openssl is available:
$ which -a openssl /usr/bin/openssl  If openssl is not shown in the &amp;lsquo;which&amp;rsquo; command output, check your path to ensure you have access to /usr/bin or /usr/local/bin.</description>
    </item>
    
    <item>
      <title>Automated Application Testing</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-g/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-g/</guid>
      <description>Automated Testing When jiffy generates the application, a set of automated tests are also generated for the application&amp;rsquo;s end-points. The tests make use of the standard go test tooling. Tests can be conducted using http or https, and run against the address:port that the application is presently serving on. Remember, the application must be running prior to executing the test.
The generated CRUD tests check the availability of the end-points and attempt to perform CRUD activities using representative data for the field-types.</description>
    </item>
    
    <item>
      <title>Deployment on Bare Metal / VM&#39;s</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-h/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-h/</guid>
      <description>Deployment Overview Jiffy was written with the idea of generating sidecar-free backend service applications. While this is a nice goal, the current version of Jiffy relies on the presence of some external processes and/or services depending on the target environment.
Database System The generated application will need to connect to a database system from the supported list. We suggest using sqlite3 for initial testing if you do not want to install a full DBMS on your development machine.</description>
    </item>
    
    <item>
      <title>Deployment on Kubernetes</title>
      <link>https://1414c.github.io/jiffy/usage/us-content-i/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1414c.github.io/jiffy/usage/us-content-i/</guid>
      <description> Deployment Overview </description>
    </item>
    
  </channel>
</rss>